#include <dphi_linear_tetrahedron_dX.h>
#include <phi_linear_tetrahedron.h>
#include <iostream>
void dphi_linear_tetrahedron_dX(Eigen::Matrix43d &dphi, Eigen::Ref<const Eigen::MatrixXd> V, Eigen::Ref<const Eigen::RowVectorXi> element, Eigen::Ref<const Eigen::Vector3d> X) {
    ////-------------------------------
    //Eigen::Vector3d X0 = V.row(element[0]);
    //Eigen::Vector3d X1 = V.row(element[1]);
    //Eigen::Vector3d X2 = V.row(element[2]);
    //Eigen::Vector3d X3 = V.row(element[3]);

    //Eigen::Matrix3d T;
    //T.col(0) = X1 - X0;
    //T.col(1) = X2 - X0;
    //T.col(2) = X3 - X0;

    //Eigen::Matrix3d inv_T = T.inverse();

    //dphi.setZero();
    //dphi.block(0, 0, 1, 3) = -inv_T.colwise().sum();//每一列的和
    //dphi.block(1, 0, 3, 3) = inv_T;
    ////dphi.block<1, 3>(0, 0) = -Eigen::Vector3d::Ones() * inv_T;
    ////dphi.block<3, 3>(1, 0) = inv_T;
    ////-------------------------------
    Eigen::VectorXd X0 = V.row(element(0));
    Eigen::VectorXd X1 = V.row(element(1));
    Eigen::VectorXd X2 = V.row(element(2));
    Eigen::VectorXd X3 = V.row(element(3));

    double X01 = X0(0);
    double X02 = X0(1);
    double X03 = X0(2);

    double X11 = X1(0);
    double X12 = X1(1);
    double X13 = X1(2);

    double X21 = X2(0);
    double X22 = X2(1);
    double X23 = X2(2);

    double X31 = X3(0);
    double X32 = X3(1);
    double X33 = X3(2);

    dphi(0, 0) = (X02 * X13 - X03 * X12 - X02 * X23 + X03 * X22 + X12 * X23 - X13 * X22) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31) - (X02 * X13 - X03 * X12 - X02 * X33 + X03 * X32 + X12 * X33 - X13 * X32) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31) + (X02 * X23 - X03 * X22 - X02 * X33 + X03 * X32 + X22 * X33 - X23 * X32) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(0, 1) = -(X01 * X13 - X03 * X11 - X01 * X23 + X03 * X21 + X11 * X23 - X13 * X21) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31) + (X01 * X13 - X03 * X11 - X01 * X33 + X03 * X31 + X11 * X33 - X13 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31) - (X01 * X23 - X03 * X21 - X01 * X33 + X03 * X31 + X21 * X33 - X23 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(0, 2) = (X01 * X12 - X02 * X11 - X01 * X22 + X02 * X21 + X11 * X22 - X12 * X21) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31) - (X01 * X12 - X02 * X11 - X01 * X32 + X02 * X31 + X11 * X32 - X12 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31) + (X01 * X22 - X02 * X21 - X01 * X32 + X02 * X31 + X21 * X32 - X22 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);

    dphi(1, 0) = -(X02 * X23 - X03 * X22 - X02 * X33 + X03 * X32 + X22 * X33 - X23 * X32) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(1, 1) = (X01 * X23 - X03 * X21 - X01 * X33 + X03 * X31 + X21 * X33 - X23 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(1, 2) = -(X01 * X22 - X02 * X21 - X01 * X32 + X02 * X31 + X21 * X32 - X22 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);

    dphi(2, 0) = (X02 * X13 - X03 * X12 - X02 * X33 + X03 * X32 + X12 * X33 - X13 * X32) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(2, 1) = -(X01 * X13 - X03 * X11 - X01 * X33 + X03 * X31 + X11 * X33 - X13 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(2, 2) = (X01 * X12 - X02 * X11 - X01 * X32 + X02 * X31 + X11 * X32 - X12 * X31) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);

    dphi(3, 0) = -(X02 * X13 - X03 * X12 - X02 * X23 + X03 * X22 + X12 * X23 - X13 * X22) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(3, 1) = (X01 * X13 - X03 * X11 - X01 * X23 + X03 * X21 + X11 * X23 - X13 * X21) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);
    dphi(3, 2) = -(X01 * X12 - X02 * X11 - X01 * X22 + X02 * X21 + X11 * X22 - X12 * X21) / (X01 * X12 * X23 - X01 * X13 * X22 - X02 * X11 * X23 + X02 * X13 * X21 + X03 * X11 * X22 - X03 * X12 * X21 - X01 * X12 * X33 + X01 * X13 * X32 + X02 * X11 * X33 - X02 * X13 * X31 - X03 * X11 * X32 + X03 * X12 * X31 + X01 * X22 * X33 - X01 * X23 * X32 - X02 * X21 * X33 + X02 * X23 * X31 + X03 * X21 * X32 - X03 * X22 * X31 - X11 * X22 * X33 + X11 * X23 * X32 + X12 * X21 * X33 - X12 * X23 * X31 - X13 * X21 * X32 + X13 * X22 * X31);

}